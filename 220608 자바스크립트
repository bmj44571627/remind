## 연산자

어떤 연산을 처리하는데 사용하도록 미리 정의된 기호를 자바스크립트에서는 연산자라고 한다.

<br>

>### 산술 연산자

---

산술 연산자는 사칙연산같은 수학 연산을 수행하는 연산자이다.
이항, 단항 산술 연산자와 단항 부정 연산자가 있다.

<br>

* #### 이항 산술 연산자


이항 산술 연산자는 연산을 수행하는데 피연산자가 2개 필요한 연산자이다.

|연산자|예|설명|
|--|--|--|
|+|x + y|x에 y를 더한다|
|-|x-y|x에서 y를 뺀다|
|*|x*y|x에 y를 곱한다|
|/|x/y|x를 y로 나눈다|
|%|x%y|x를 y로 나누어 나머지를 구한다|
|**|x**y|x의 y 거듭제곱을 구한다|

<br>

* #### 단항 산술 연산자

단항 산술 연산자는 연산을 수행하는데 피연산자가 1개만 필요한 연산자이다. 앞에 사용하면 전치 연산, 뒤에 사용하면 후치 연산이라 한다. 전치 연산은 항상 ~하기 전에 증감하며 후치 연산은 ~ 한 후에 증감한다.

|연산자|예|설명|
|--|--|--|
|++|x++(후치), ++x(전치)|x를 1 증가시킨다|
|--|x--(후치), --x(전치)|x를 1 감소시킨다|

<br>

* #### 단항 부정 연산자

단항 부정 연산자는 피연산자 앞에 위치하며 피연산자의 부호를 부정하는 연산을 수행한다. 숫자형 데이터가 할당된 변수에만 사용할 수 있다.

|연산자|예|설명|
|--|--|--|
|+|-x|x의 부호를 부정한다|


<br>

>### 대입 연산자와 복합 대입 연산자

대입 연산자는 데이터를 대입하는 연산을 수행하는 연산자를 말한다.

<br>

|구분|연산자|예|설명|
|--|--|--|--|
|대입 연산자|=|x=y|x에 y를 대입|
|복합 대입 연산자|+=|x+=y|x에 x+y를 대입|
||-=|x-=y|x에 x-y를 대입|
||*=|x*=y|x에 x*y를 대입|
||/=|x/=y|x에 x/y를 대입|
||%=|x%=y|x에 x%y를 대입|


<br>


>### 비교 연산자

비교 연산자는 피연산자를 비교하여 논리형 값인 true, false를 반환하는 연산을 수행한다.

비교 연산자 중 동등 연산자(==)는 값만 비교하고 일치 연산자(===)는 값과 자료형까지 비교한다.

<br>

|연산자|예|설명|
|--|--|--|
|==|x==y|x와 y의 값이 같으면 true를 반환|
|===|x===y|x와 y의 값과 자료형이 같으면 true를 반환|
|!=|x!=y|x와 y의 값이 다르면 true를 반환|
|!==|x!==y|x와 y의 값과 자료형이 다르면 true를 반환|
|<|x<y|x가 y보다 작으면 true를 반환|
|>|x>y|x가 y보다 크면 true를 반환|


<br>

>### 논리 연산자

---

논리 연산자는 피연산자를 논리적으로 평가한 뒤 조건에 맞는 피연산자를 반환한다.
논리 연산자의 특징은 피연산자를 모두 논리형으로 평가한다. "", undefined, 0, null만 거짓으로 평가되고 나머지는 참으로 평가된다.

<br>

|연산자|예|설명|
|--|--|--|
|&&|x && y|x가 참이면 y를 반환, 거짓이면 x를 반환|
|!|!x|x가 참이면 false를 반환하고 거짓이면 true를 반환|

<br>

* AND 연산자는 피연산자를 좌측부터 평가해 결과가 거짓이면 거짓인 피연산자를 반환, 참이면 마지막에 평가되는 피연산자를 반환한다.

* OR 연산자는 피연산자를 왼쪽부터 평가해 참으로 평가된 피연산자를 반환한다.

* 삼항 연산자는 세 항중 가장 왼쪽에 있는 피연산자의 참, 거짓에 따라 나머지 두 항에 있는 피연산자를 선택적으로 반환한다.

<br>

## 조건문 다루기

js의 조건문은 대표적으로 if문과 switch문이 있다.

<br>

>### if, else, else if 문

---

<br>

* #### IF 문
  

IF문은 if뒤에 오는 ()안의 조건식이 참으로 평가되면 {}안의 코드를 실행하는 조건문이다. 조건식은 숫자를 써도, 문자열을 써도 undefined를 써도, null을 써도 true/false로 평가된다.
  
  ```css
  if(조건식){
  //조건식이 참이면 실행
  }
  ```
  
  
  
 * #### ELSE 문 

else문은 if문의 조건식이 거짓일 때 실행되는 블록문을 정의한다.

```CSS
if(조건식){
//조건식이 참이면 블록문 실행
} else{
// 조건식이 거짓이면 블록문 실행
}
```
else문은 if문 없이 단독으로 사용할 수 없으며, 하나의 if 문에는 하나의 else문만 사용할 수 있다.

<br>

* #### else if 문

else if 문은 if 문에 조건을 추가하고 싶을 때 사용한다. 개수제한은 없지만 단독으로 사용할 수 없고, 항상 if문 다음에 사용하고 else문보다 먼저 사용해야 한다.

<br>


>### switch 문

---

switch 문은 switch 뒤에 ()값과 일치하는 case문이 있을 때 해당 코드를 실행하는 조건문이다. 일치 여부 확인은 값과 자료형을 함께 비교한다. 하나 이상의 case, default, break문을 사용한다.

```css
switch(key){
case value1:
// key가 value1일때
break;
case value2:
// key가 value2일때
break;
default:
// 아무것도 일치하지 않을 때 실행
break;
}
```

<br>

>### if문과 조건식

---

if문은 조건에 식을 사용한다. 점수 90점 이상 A++학점이라고 출력하는 조건문과 100점 이하라는 조건울 추가하려면 다음과 같이 작성한다.

<br>

```css
let score = 90;
if(score >= 90 && score <= 100){
console.log("A++학점");
}
```


<br>

>## ★ 보완사항 및 소감

---

금일 학습한 연산자, 조건문을 복습한 후 반복문과 함수를 미리 예습할 계획입니다


