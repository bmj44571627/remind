>### Storybook이란?

---

Storybook은 React 라이브러리로 완전히 컴포넌트로 독립시킬 수 있고 Ui 환경 구성을 직접 수정가능하며 다양한 컴포넌트를 시도해볼 수 있다. 

문서화`(documentation)` 또는, 외부 공개용 디자인 시스템`(Design System)`을 개발하기 위한 기본 플랫폼으로 사용할 수 있다.

스토리북의 기본 구성 단위는 스토리`(Story)`이며 하나의 UI 컴포넌트는 보통 하나 이상의 Story를 가지게 된다. 각 Story는 해당 컴포넌트가 어떻게 사용되는지 보여 주며 각각 독립적으로 어떻게 실제로 렌더링되는지 시각적으로 테스트하면서 개발을 진행할 수 있다.

<br>

>### 리액트 스토리북 특징 정리

---

#### * 강력한 UI 제공

Storybook은 고립된 환경에서 UI 컴포넌트를 빌드하기 위해, 샌드박스를 제공하며 따라서 여러가지 상태나 상황들을 설정하여 개발을 할 수 있다
 
#### * 고립된 환경에서 UI 컴포넌트 개발

컴포넌트 개발을 하기 위해 복잡한 데이터나 비즈니스 로직을 구축하지 않아도 된다
 
#### * 어려운 유스 케이스를 모킹

앱에서 재현하기 어려운 상태의 컴포넌트를 렌더링할 수 있다
 
#### *유스케이스를 스토리로 저장

특정 유스케이스를 스토리로 저장하여 개발이나 테스트, QA에 써먹을 수 있다

#### * 신뢰성 있는 컴포넌트 전달
Storybook은 엣지 케이스를 추적하기 쉽게 만들어준다.
 
 
#### * 일관적인  UX를 보장
스토리를 이용해 가시적인 스펙을 손쉽게 만들 수 있다.
 
#### * 코드 복원 자동 탐지
공식 애드온인 Storyshot을 이용하여 코드 스냅샷 테스트를 받을 수 있습니다.
 
#### * 컴포넌트에 대한 유닛 테스트
유닛 테스트를 위해 스토리를 재사용 할 수 있습니다.
 
<br>

>### 실습 프로젝트 생성

---

CRA(`Create React App`)을 사용해서 실습용 React 프로젝트를 생성한다.

```css
$ npx create-react-app <해당 디렉터리>
```

<br>

>### Storybook 설치

---

```css
$ npx @storybook/cli sb init
```

설치후 `package.json` 파일에 2개의 스크립트와 4개의 개발 의존성이 추가된다.

<br>

>### Storybook 설정

`.storybook` 디렉터리에 Storybook 관련 2개의 설정 파일이 있는데 `addons.js`파일은 Storybook 애드온을 추가할 때 사용하고, `config.js` 파일은 그 밖에 다른 설정을 할 때 사용된다.

`.storybook/config.js` 파일을 열고, `src` 디렉터리 내부에 `stories.js`로 끝나는 모든 파일이 Story로 인식되도록 설정해줍니다. (기본 설정은 `src/stories` 디렉터리 하위만 탐색하므로 주석 처리가 하거나 삭제합니다.)

<br>

>### React 컴포넌트 작성

---

지금부터 단순한 텍스트를 랜더링하기 위한 <Text/>라는 짧은 React 컴포넌트를 작성한다. 먼저 src/components 디렉터리를 생성하고, 그 안에 Text.jsx 파일을 생성하고, 그 파일 안에 아래 코드를 작성한다.

UI 컴포넌트 props로 넘어온 `color`, `italic`, `underline`에 따라서 다른 스타일이 적용된 children prop을 랜더링한다.

<br>

>### Story 추가

---

관례상 하나의 UI 컴포넌트에 대해 하나 이상의 Story를 위에서 설정했던 것 처럼 <컴포넌트 이름>.stories.js라는 하나의 파일 안에 추가하고 src/components 디렉터리를 안에 Text.stories.js 파일을 생성하고, 그 파일 안에 아래 코드를 작성한다.

default 임포트는 해당 UI 컴포넌트에 대한 메타 정보를 객체로 작성하는데 `title`은 Storybook 메뉴에서에서 해당 컴포넌트가 어떻게 표시될지를 결정하고, `component`에는 위에서 작성한 컴포넌트를 지정한다. 그 다음 4개의 named 임포트에는 UI 컴포넌트의 활용 예시를 나타내는 Story를 하나씩 함수 형태로 작성한다.

<br>

>### Storybook 구동

---

```css
$ npm run storybook
```

Storybook 구동 스크립트를 실행하면, 브라우저에 `http://localhost:9009/`이 열린다.
