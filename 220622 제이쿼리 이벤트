>### 이벤트란?

---

`이벤트(Event)`는 웹 페이지에서 사용자의 마우스나 키보드 조작에 의해 발생되는 사건이며 발생된 이벤트를 처리해 주는 함수를 `이벤트 메소드(Event Method)`라고 한다.

```css
$("#btn").click(function(){
$("#show").text("안녕하세요");
});
```

선택자로 id를 고르고 이벤트 메소드가 동작하며 이벤트 핸들러가 발생된 이벤트를 처리한다.

#### 주요 이벤트 정리

|구분|이벤트 메소드|설명
|--|--|--|
|마우스 이벤트|click()|선택 요소의 클릭 이벤트 처리|
||dblclick()|선택 요소의 더블클릭 이벤트 처리|
|키보드 이벤트|keypress()|키보드 눌러졌을때 발생되는 이벤트|
||keydown()|눌러지고 있는 동안 발생되는 이벤트 처리|
||keyup()|키보드 키가 눌러졌다 뗄 때 발생되는 이벤트 처리|
|폼 이벤트|focus()|마우스 포커스가 생성될 때 발생되는 이벤트|
||blur()|마우스 포커스가 되어 있다가 잃었을 때 발생|
|문서/윈도우이벤트|ready()|DOM 요소들이 모두 로드되었을 때 발생|

<br>

>### 이벤트 메소드

---

마우스, 키보드, 폼, 문서/브라우저 이벤트 처리 방법에 대하여


#### * 마우스 이벤트 예시

```css
$("#btn1").click(function(){
#("#show").text("클릭했어요!");
});
```

#### * 키보드 이벤트 예시

```css
$("p:eq(0) input").keydown(function(){
$(this).css("background-color", "yellow");
});
```

#### * 폼 이벤트

```css
$("input").focus(function(){
$(this).css("background-color","yellow");
});
```

#### * 윈도우 이벤트

```css
$(window).resize(function(){
$("span:eq(0)").text(window.innerWidth);
});
```

<br>

>### 이벤트 등록

---

제이쿼리에서는 `on()` 메소드를 이용하면 발생되는 이벤트를 이벤트 핸들러에 직접 등록할 수 있다. on('click')과 click()의 차이는 전자가 메모리를 덜 먹고 동적으로 생성되는 요소들이 잘 작동되는 점이다.


<br>

>### 제이쿼리 효과

---

페이지 요소에 대해 `보이기(show)`, `감추기(Hide)`, `토글(Toggle)`, `페이드(Fade)`, `슬라이드(Slide)` 등이 있다.


#### * 기본 효과

hide() : 화면에서 감추어진다

show() : 화면에 다시 보여진다

toggle() : 누를 때마다 보이기와 감추기가 되풀이 된다.


#### * 페이드 효과

Fade In() : 페이드 인 효과는 페이지에서 요소가 서서히 보여지는 것이다.

Fade Out() : 페이드 아웃 효과는 요소가 서서히 사라지는 효과를 말한다.

#### * 슬라이드 효과

slideUp() : 요소가 위 방향으로 슬라이드되면서 사라지는 효과를 말한다.

slideDown() : 요소가 아래 방향으로 슬라이드되면서 나타나는 효과를 말한다.

<br>

>### 애니메이션 효과

---

제이쿼리를 이용하면 페이지 요소에 대해 요소의 크기, 투명도, 경계선, 위치 등에 애니메이션 효과를 줄 수 있다.

#### * animate() 메소드

사용 형식은

```css
$("선택자").animate(스타일, 실행시간)
```

속성에는 left, top, bottom 등이 있고 실행 시간은 밀리세컨드(Millisecond) 단위를 사용한다. 미설정시 기본값 400밀리세컨드가 적용된다.


#### * stop() 메소드

```css
$("선택자").click(function(){$("선택자2").stop();});
```

선택된 요소가 진행 중인 애니메이션 동작을 멈추고자 할 때 사용된다.
